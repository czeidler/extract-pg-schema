import{_ as e,o as a,c as s,O as t}from"./chunks/framework.6d15b5d0.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/extract-pg-schema.materializedviewcolumn.source.md","filePath":"api/extract-pg-schema.materializedviewcolumn.source.md"}'),n={name:"api/extract-pg-schema.materializedviewcolumn.source.md"},o=t(`<p><a href="./">Home</a> &gt; <a href="./extract-pg-schema.html">extract-pg-schema</a> &gt; <a href="./extract-pg-schema.materializedviewcolumn.html">MaterializedViewColumn</a> &gt; <a href="./extract-pg-schema.materializedviewcolumn.source.html">source</a></p><h2 id="materializedviewcolumn-source-property" tabindex="-1">MaterializedViewColumn.source property <a class="header-anchor" href="#materializedviewcolumn-source-property" aria-label="Permalink to &quot;MaterializedViewColumn.source property&quot;">â€‹</a></h2><p>This will contain a &quot;link&quot; to the source table or view and column, if it can be determined.</p><p><strong>Signature:</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">source</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">schema</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> string;</span></span>
<span class="line"><span style="color:#A6ACCD;">        table: string;</span></span>
<span class="line"><span style="color:#A6ACCD;">        column: string;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">};</span></span></code></pre></div>`,5),r=[o];function c(l,p,i,m,u,d){return a(),s("div",null,r)}const g=e(n,[["render",c]]);export{_ as __pageData,g as default};
