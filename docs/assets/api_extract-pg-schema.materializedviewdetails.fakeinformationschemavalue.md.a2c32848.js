import{_ as a,c as e,o as t,N as i}from"./chunks/framework.2bebdaf8.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/extract-pg-schema.materializedviewdetails.fakeinformationschemavalue.md"}'),s={name:"api/extract-pg-schema.materializedviewdetails.fakeinformationschemavalue.md"},r=i(`<p><a href="./">Home</a> &gt; <a href="./extract-pg-schema.html">extract-pg-schema</a> &gt; <a href="./extract-pg-schema.materializedviewdetails.html">MaterializedViewDetails</a> &gt; <a href="./extract-pg-schema.materializedviewdetails.fakeinformationschemavalue.html">fakeInformationSchemaValue</a></p><h2 id="materializedviewdetails-fakeinformationschemavalue-property" tabindex="-1">MaterializedViewDetails.fakeInformationSchemaValue property <a class="header-anchor" href="#materializedviewdetails-fakeinformationschemavalue-property" aria-label="Permalink to &quot;MaterializedViewDetails.fakeInformationSchemaValue property&quot;">â€‹</a></h2><p>The Postgres information_schema views do not contain info about materialized views. This value is the result of a query that matches the one for regular views. Use with caution, not all fields are guaranteed to be meaningful and/or accurate.</p><p><strong>Signature:</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">fakeInformationSchemaValue</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> InformationSchemaView</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,5),o=[r];function n(l,c,m,p,h,d){return t(),e("div",null,o)}const _=a(s,[["render",n]]);export{u as __pageData,_ as default};
