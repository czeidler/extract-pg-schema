import{_ as t,c as e,o as a,a as s}from"./app.4cb370b5.js";const x=JSON.parse('{"title":"ExtractSchemaOptions.typeFilter property","description":"","frontmatter":{},"headers":[{"level":2,"title":"ExtractSchemaOptions.typeFilter property","slug":"extractschemaoptions-typefilter-property"}],"relativePath":"api/extract-pg-schema.extractschemaoptions.typefilter.md"}'),p={name:"api/extract-pg-schema.extractschemaoptions.typefilter.md"},r=s(`<p><a href="./">Home</a> &gt; <a href="./extract-pg-schema.html">extract-pg-schema</a> &gt; <a href="./extract-pg-schema.extractschemaoptions.html">ExtractSchemaOptions</a> &gt; <a href="./extract-pg-schema.extractschemaoptions.typefilter.html">typeFilter</a></p><h2 id="extractschemaoptions-typefilter-property" tabindex="-1">ExtractSchemaOptions.typeFilter property <a class="header-anchor" href="#extractschemaoptions-typefilter-property" aria-hidden="true">#</a></h2><p>Filter function that you can use if you want to exclude certain items from the schemas.</p><p><b>Signature:</b></p><div class="language-typescript"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">typeFilter</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pgType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PgType</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> boolean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,5),o=[r];function c(n,l,i,h,y,m){return a(),e("div",null,o)}var d=t(p,[["render",c]]);export{x as __pageData,d as default};
