import{_ as e,c as t,o as a,a as s}from"./app.6d008d9e.js";const _=JSON.parse('{"title":"ExtractSchemaOptions.resolveViews property","description":"","frontmatter":{},"headers":[{"level":2,"title":"ExtractSchemaOptions.resolveViews property","slug":"extractschemaoptions-resolveviews-property"}],"relativePath":"api/extract-pg-schema.extractschemaoptions.resolveviews.md"}'),o={name:"api/extract-pg-schema.extractschemaoptions.resolveviews.md"},r=s(`<p><a href="./">Home</a> &gt; <a href="./extract-pg-schema.html">extract-pg-schema</a> &gt; <a href="./extract-pg-schema.extractschemaoptions.html">ExtractSchemaOptions</a> &gt; <a href="./extract-pg-schema.extractschemaoptions.resolveviews.html">resolveViews</a></p><h2 id="extractschemaoptions-resolveviews-property" tabindex="-1">ExtractSchemaOptions.resolveViews property <a class="header-anchor" href="#extractschemaoptions-resolveviews-property" aria-hidden="true">#</a></h2><p>extractShemas will always attempt to parse view definitions to discover the &quot;source&quot; of each column, i.e. the table or view that it is derived from. If this option is set to <code>true</code>, it will attempt to follow this source and copy values like indices, isNullable, etc. so that the view data is closer to what the database reflects.</p><p><b>Signature:</b></p><div class="language-typescript"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">resolveViews</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> boolean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,5),c=[r];function p(i,l,n,h,m,d){return a(),t("div",null,c)}var x=e(o,[["render",p]]);export{_ as __pageData,x as default};
