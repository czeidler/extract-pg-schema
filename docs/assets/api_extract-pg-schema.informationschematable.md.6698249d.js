import{_ as t,c as e,o as a,a as r}from"./app.fae77951.js";const b=JSON.parse('{"title":"InformationSchemaTable interface","description":"","frontmatter":{},"headers":[{"level":2,"title":"InformationSchemaTable interface","slug":"informationschematable-interface"},{"level":2,"title":"Properties","slug":"properties"}],"relativePath":"api/extract-pg-schema.informationschematable.md"}'),n={name:"api/extract-pg-schema.informationschematable.md"},s=r(`<p><a href="./">Home</a> &gt; <a href="./extract-pg-schema.html">extract-pg-schema</a> &gt; <a href="./extract-pg-schema.informationschematable.html">InformationSchemaTable</a></p><h2 id="informationschematable-interface" tabindex="-1">InformationSchemaTable interface <a class="header-anchor" href="#informationschematable-interface" aria-hidden="true">#</a></h2><p>The view tables contains all tables and views defined in the current database. Only those tables and views are shown that the current user has access to (by way of being the owner or having some privilege).</p><p><b>Signature:</b></p><div class="language-typescript"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">InformationSchemaTable</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><table><thead><tr><th>Property</th><th>Modifiers</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a href="./extract-pg-schema.informationschematable.commit_action.html">commit_action</a></td><td></td><td>any</td><td>Not yet implemented</td></tr><tr><td><a href="./extract-pg-schema.informationschematable.is_insertable_into.html">is_insertable_into</a></td><td></td><td>YesNo</td><td>YES if the table is insertable into, NO if not (Base tables are always insertable into, views not necessarily.)</td></tr><tr><td><a href="./extract-pg-schema.informationschematable.is_typed.html">is_typed</a></td><td></td><td>YesNo</td><td>YES if the table is a typed table, NO if not</td></tr><tr><td><a href="./extract-pg-schema.informationschematable.reference_generation.html">reference_generation</a></td><td></td><td>string | null</td><td>Applies to a feature not available in PostgreSQL</td></tr><tr><td><a href="./extract-pg-schema.informationschematable.self_referencing_column_name.html">self_referencing_column_name</a></td><td></td><td>string | null</td><td>Applies to a feature not available in PostgreSQL</td></tr><tr><td><a href="./extract-pg-schema.informationschematable.table_catalog.html">table_catalog</a></td><td></td><td>string</td><td>Name of the database that contains the table (always the current database)</td></tr><tr><td><a href="./extract-pg-schema.informationschematable.table_name.html">table_name</a></td><td></td><td>string</td><td>Name of the table</td></tr><tr><td><a href="./extract-pg-schema.informationschematable.table_schema.html">table_schema</a></td><td></td><td>string</td><td>Name of the schema that contains the table</td></tr><tr><td><a href="./extract-pg-schema.informationschematable.table_type.html">table_type</a></td><td></td><td>&#39;BASE TABLE&#39; | &#39;VIEW&#39; | &#39;FOREIGN&#39; | &#39;LOCAL TEMPORARY&#39;</td><td>Type of the table: BASE TABLE for a persistent base table (the normal table type), VIEW for a view, FOREIGN for a foreign table, or LOCAL TEMPORARY for a temporary table</td></tr><tr><td><a href="./extract-pg-schema.informationschematable.user_defined_type_catalog.html">user_defined_type_catalog</a></td><td></td><td>string | null</td><td>If the table is a typed table, the name of the database that contains the underlying data type (always the current database), else null.</td></tr><tr><td><a href="./extract-pg-schema.informationschematable.user_defined_type_name.html">user_defined_type_name</a></td><td></td><td>string | null</td><td>If the table is a typed table, the name of the underlying data type, else null.</td></tr><tr><td><a href="./extract-pg-schema.informationschematable.user_defined_type_schema.html">user_defined_type_schema</a></td><td></td><td>string | null</td><td>If the table is a typed table, the name of the schema that contains the underlying data type, else null.</td></tr></tbody></table>`,7),d=[s];function i(l,o,h,c,m,p){return a(),e("div",null,d)}var _=t(n,[["render",i]]);export{b as __pageData,_ as default};
