import{_ as e,o as t,c as a,O as i}from"./chunks/framework.6d15b5d0.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/extract-pg-schema.materializedviewdetails.md","filePath":"api/extract-pg-schema.materializedviewdetails.md"}'),s={name:"api/extract-pg-schema.materializedviewdetails.md"},r=i('<p><a href="./">Home</a> &gt; <a href="./extract-pg-schema.html">extract-pg-schema</a> &gt; <a href="./extract-pg-schema.materializedviewdetails.html">MaterializedViewDetails</a></p><h2 id="materializedviewdetails-interface" tabindex="-1">MaterializedViewDetails interface <a class="header-anchor" href="#materializedviewdetails-interface" aria-label="Permalink to &quot;MaterializedViewDetails interface&quot;">​</a></h2><p><strong>Signature:</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MaterializedViewDetails</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PgType</span><span style="color:#89DDFF;">&lt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">materializedView</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p><strong>Extends:</strong> <a href="./extract-pg-schema.pgtype.html">PgType</a>&lt;&#39;materializedView&#39;&gt;</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table><thead><tr><th>Property</th><th>Modifiers</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a href="./extract-pg-schema.materializedviewdetails.columns.html">columns</a></td><td></td><td><a href="./extract-pg-schema.materializedviewcolumn.html">MaterializedViewColumn</a>[]</td><td></td></tr><tr><td><a href="./extract-pg-schema.materializedviewdetails.definition.html">definition</a></td><td></td><td>string</td><td></td></tr><tr><td><a href="./extract-pg-schema.materializedviewdetails.fakeinformationschemavalue.html">fakeInformationSchemaValue</a></td><td></td><td><a href="./extract-pg-schema.informationschemaview.html">InformationSchemaView</a></td><td>The Postgres information_schema views do not contain info about materialized views. This value is the result of a query that matches the one for regular views. Use with caution, not all fields are guaranteed to be meaningful and/or accurate.</td></tr></tbody></table>',7),l=[r];function o(n,c,d,p,h,m){return t(),a("div",null,l)}const _=e(s,[["render",o]]);export{g as __pageData,_ as default};
