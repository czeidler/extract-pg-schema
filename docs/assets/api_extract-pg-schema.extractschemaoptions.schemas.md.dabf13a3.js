import{_ as a,c as e,o as t,a as s}from"./app.6d008d9e.js";const d=JSON.parse('{"title":"ExtractSchemaOptions.schemas property","description":"","frontmatter":{},"headers":[{"level":2,"title":"ExtractSchemaOptions.schemas property","slug":"extractschemaoptions-schemas-property"}],"relativePath":"api/extract-pg-schema.extractschemaoptions.schemas.md"}'),c={name:"api/extract-pg-schema.extractschemaoptions.schemas.md"},r=s(`<p><a href="./">Home</a> &gt; <a href="./extract-pg-schema.html">extract-pg-schema</a> &gt; <a href="./extract-pg-schema.extractschemaoptions.html">ExtractSchemaOptions</a> &gt; <a href="./extract-pg-schema.extractschemaoptions.schemas.html">schemas</a></p><h2 id="extractschemaoptions-schemas-property" tabindex="-1">ExtractSchemaOptions.schemas property <a class="header-anchor" href="#extractschemaoptions-schemas-property" aria-hidden="true">#</a></h2><p>Will contain an array of schema names to extract. If undefined, all non-system schemas will be extracted.</p><p><b>Signature:</b></p><div class="language-typescript"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">schemas</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> string[]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,5),p=[r];function o(n,h,m,i,l,_){return t(),e("div",null,p)}var g=a(c,[["render",o]]);export{d as __pageData,g as default};
