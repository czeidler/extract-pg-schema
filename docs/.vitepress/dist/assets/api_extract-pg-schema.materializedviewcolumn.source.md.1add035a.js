import{_ as e,c as a,o as s,a as t}from"./app.fae77951.js";const h=JSON.parse('{"title":"MaterializedViewColumn.source property","description":"","frontmatter":{},"headers":[{"level":2,"title":"MaterializedViewColumn.source property","slug":"materializedviewcolumn-source-property"}],"relativePath":"api/extract-pg-schema.materializedviewcolumn.source.md"}'),n={name:"api/extract-pg-schema.materializedviewcolumn.source.md"},r=t(`<p><a href="./">Home</a> &gt; <a href="./extract-pg-schema.html">extract-pg-schema</a> &gt; <a href="./extract-pg-schema.materializedviewcolumn.html">MaterializedViewColumn</a> &gt; <a href="./extract-pg-schema.materializedviewcolumn.source.html">source</a></p><h2 id="materializedviewcolumn-source-property" tabindex="-1">MaterializedViewColumn.source property <a class="header-anchor" href="#materializedviewcolumn-source-property" aria-hidden="true">#</a></h2><p>This will contain a &quot;link&quot; to the source table or view and column, if it can be determined.</p><p><b>Signature:</b></p><div class="language-typescript"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">source</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">schema</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> string;</span></span>
<span class="line"><span style="color:#A6ACCD;">        table: string;</span></span>
<span class="line"><span style="color:#A6ACCD;">        column: string;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div>`,5),o=[r];function l(c,p,i,m,u,d){return s(),a("div",null,o)}var y=e(n,[["render",l]]);export{h as __pageData,y as default};
