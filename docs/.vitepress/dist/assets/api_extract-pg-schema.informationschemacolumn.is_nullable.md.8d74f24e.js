import{_ as a,c as e,o as n,a as l}from"./app.fae77951.js";const f=JSON.parse('{"title":"InformationSchemaColumn.is_nullable property","description":"","frontmatter":{},"headers":[{"level":2,"title":"InformationSchemaColumn.is_nullable property","slug":"informationschemacolumn-is-nullable-property"}],"relativePath":"api/extract-pg-schema.informationschemacolumn.is_nullable.md"}'),t={name:"api/extract-pg-schema.informationschemacolumn.is_nullable.md"},o=l(`<p><a href="./">Home</a> &gt; <a href="./extract-pg-schema.html">extract-pg-schema</a> &gt; <a href="./extract-pg-schema.informationschemacolumn.html">InformationSchemaColumn</a> &gt; <a href="./extract-pg-schema.informationschemacolumn.is_nullable.html">is_nullable</a></p><h2 id="informationschemacolumn-is-nullable-property" tabindex="-1">InformationSchemaColumn.is_nullable property <a class="header-anchor" href="#informationschemacolumn-is-nullable-property" aria-hidden="true">#</a></h2><p>YES if the column is possibly nullable, NO if it is known not nullable. A not-null constraint is one way a column can be known not nullable, but there can be others.</p><p><b>Signature:</b></p><div class="language-typescript"><span class="copy"></span><pre><code><span class="line"><span style="color:#FFCB6B;">is_nullable</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> YesNo</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,5),s=[o];function c(r,i,m,p,h,u){return n(),e("div",null,s)}var b=a(t,[["render",c]]);export{f as __pageData,b as default};
